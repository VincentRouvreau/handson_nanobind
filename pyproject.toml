[build-system]
requires = ["scikit-build-core >=0.10", "nanobind >=1.3.2"]
build-backend = "scikit_build_core.build"

[project]
name = "nanobind-example"
version = "0.0.1"
description = "An example minimal project that compiles bindings using nanobind and scikit-build"
readme = "README.md"
requires-python = ">=3.8"
authors = [{ name = "Wenzel Jakob", email = "wenzel.jakob@epfl.ch" }]
classifiers = ["License :: OSI Approved :: BSD License"]

[project.urls]
Homepage = "https://github.com/VincentRouvreau/handson_nanobind/"


[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "build-system.requires"

# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"

# Build stable ABI wheels for CPython 3.12+
wheel.py-api = "cp312"

[tool.cibuildwheel]
# Necessary to see build output from the actual compilation
build-verbosity = 1
build = "cp310-*"

# Run pytest to ensure that the package was correctly built
test-command = "pytest -vv {project}/tests"
test-requires = "pytest"

[tool.cibuildwheel.linux]
before-all = "yum -y update && yum -y install curl && curl -LO 'https://archives.boost.io/release/1.87.0/source/boost_1_87_0.tar.gz' && tar xf boost_1_87_0.tar.gz && cd boost_1_87_0 && ./bootstrap.sh && ./b2 --with-filesystem install"

[[tool.cibuildwheel.overrides]]
select = "*-musllinux*"
before-all = "apk update && apk add curl && curl -LO 'https://archives.boost.io/release/1.87.0/source/boost_1_87_0.tar.gz' && tar xf boost_1_87_0.tar.gz && cd boost_1_87_0 && ./bootstrap.sh && ./b2 --with-filesystem install"

[tool.cibuildwheel.macos]
before-all = "brew update && brew install curl && curl -LO 'https://archives.boost.io/release/1.87.0/source/boost_1_87_0.tar.gz' && tar xf boost_1_87_0.tar.gz && cd boost_1_87_0  && ./bootstrap.sh && sudo ./b2 cflags=-mmacosx-version-min=10.11 cxxflags=-mmacosx-version-min=10.11 mflags=-mmacosx-version-min=10.11 mmflags=-mmacosx-version-min=10.11 linkflags=-mmacosx-version-min=10.11 --with-filesystem install"

[tool.cibuildwheel.windows]
before-all = "set VCPKG_BUILD_TYPE=release && vcpkg install boost-filesystem --triplet x64-windows && ls 'C:\\vcpkg\\installed\\x64-windows\\bin'"
